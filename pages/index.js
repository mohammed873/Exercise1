import Head from 'next/head'
import React, {useState , useEffect} from 'react';
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import styles  from '../styles/Home.module.css';
import axios from 'axios';
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome"; 
import { faTimes, faTrash } from "@fortawesome/free-solid-svg-icons"; 


export default function Home() {
const [hidden , setHidden] = useState(true);
const [users , setUsers] = useState([]);

//fetching users data 
const getUsers = async () => {
   await axios.get('https://60fec67525741100170787b0.mockapi.io/data/users')
   .then(res=>{
    setUsers(res.data)
  }).catch(err=>{
    console.log(err);
  })
}

//creating a custum status span 
const  custumStatus = (status) => {
    if(status == "on validation"){
      return <span className={styles.on_validation}> On validation</span>
    }
    else if(status == "valide"){
       return <span className={styles.valide}> valide</span>
    }else{
       return <span className={styles.rejected}> Rejected</span>
    }
}

//empty inputs after submit
const emptyInput = async () => {
  document.getElementById('firstName').value = ""  
  document.getElementById('lastName').value = "" 
  document.getElementById('userName').value = "" 
  document.getElementById('status').value = "" 
  document.getElementById('registrationNumber').value = ""  
  document.getElementById('createdDate').value = "" 

}

//adding new users to the list 
const addUser = async () => {
  const firstName = document.getElementById('firstName').value 
  const lastName = document.getElementById('lastName').value
  const userName = document.getElementById('userName').value
  const status = document.getElementById('status').value
  const registrationNumber = document.getElementById('registrationNumber').value
  const createdDate = document.getElementById('createdDate').value

  await axios.post('https://60fec67525741100170787b0.mockapi.io/data/users',{
    firstName,
    lastName, 
    userName, 
    status, 
    registrationNumber, 
    createdDate
  })
  .then(res=>{
    setHidden(true);
    getUsers()
    emptyInput()
    toast.configure()
    toast.success("user added successfully")
  }).catch(err=>{
    toast.configure()
    toast.error(err)
  })
}

//deleting a specific user by id
const deleteUser = async (user_id) => {
  if(window.confirm('are you sure you want to delete the user with id '+user_id))
  await axios.delete('https://60fec67525741100170787b0.mockapi.io/data/users/'+user_id)
   .then(res=>{
    getUsers()
    toast.configure()
    toast.success("user successfully deleted")
  }).catch(err=>{
    toast.configure()
    toast.error(err)
  })
}

useEffect(() => {
     getUsers()
}, [])
  


  return (
    <div >
      <Head>
        <title>Exercie1 || home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"/>
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
      </Head>

      <main className={hidden ? styles.main : styles.dropeffectMain}>
        <br/>
        <div  id={styles.table}>
          <table className="table">
            <thead>
              <tr>
                <th scope="col">ID</th>
                <th scope="col">Date de creation</th>
                <th scope="col">Etat</th>
                <th scope="col">Nom</th>
                <th scope="col">Prenom</th>
                <th scope="col">Nom de d'utilisateur</th>
                <th scope="col">Matricule</th>
                <th scope="col">Action</th>
              </tr>
            </thead>
            <tbody>
            {users.map(user => (
                <tr key={user.id}>
                <td>{user.id}</td>
                <td>{user.createdDate}</td>
                <td>
                  {custumStatus(user.status)}
                </td>
                <td>{user.firstName}</td>
                <td>{user.lastName}</td>
                <td>{user.userName}</td>
                <td>{user.registrationNumber}</td>
                <td>
                  <button className={styles.deletebtn} onClick={ () => deleteUser(user.id)} >    
                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon> 
                  </button>
                </td>
              </tr>
            ))}
              
            </tbody>
          </table>
        </div>
        
        <div className={styles.savebtnContainer}>
           <button type="button" className="btn btn-warning" id="addUser" onClick={()=> setHidden(false)}>Add new user</button>
        </div>
        <br/>
      </main>
      <div className={hidden ? styles.formContainer : styles.showFormContainer} >
          <span className={styles.CancelBtn} onClick={()=> setHidden(true)}>
             <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>
          </span>
          <h2 className={styles.title}>Add new user</h2>
          <br/>
             <div className={styles.Row}>
                <div className="form-group" id={styles.inputContainer}>
                  <label htmlFor="firstName" className="col-form-label">First Name</label>
                  <input type="text" className="form-control" id="firstName" placeholder="Enter first name" />
                </div>
                <div className="form-group" id={styles.inputContainer}>
                  <label htmlFor="lastName" className="col-form-label">Last Name</label>
                  <input type="text" className="form-control" id="lastName" placeholder="Enter last name" />
                </div>
                <select className="form-select" className={styles.selectContainer} id="status">
                  <option defaultValue="valide">valide</option>
                  <option defaultValue="on validation">on validation</option>
                  <option defaultValue="Rejected">Rejected</option>
                </select>
             </div>

             <div className={styles.Row}>
                <div className="form-group" id={styles.inputContainer}>
                  <label htmlFor="userName" className="col-form-label">User Name</label>
                  <input type="text" className="form-control" id="userName" placeholder="Enter user name" />
                </div>
                <div className="form-group" id={styles.inputContainer}>
                  <label htmlFor="createdDate" className="col-form-label">Creation Date</label>
                  <input type="date" className="form-control" id="createdDate" />
                </div>
             </div>

             <div className={styles.Row}>
               <div className="form-group" id={styles.inputContainer}>
                  <label htmlFor="registrationNumber" className="col-form-label">registration Number</label>
                  <input type="text" className="form-control" id="registrationNumber" placeholder="Enter registration number" />
                </div>       
             </div>
             <div className={styles.saveBtn}>
               <button type="button" className="btn btn-warning" onClick={addUser}>Save</button>
             </div>
          </div>
    </div>
  )
}
